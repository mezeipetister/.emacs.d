;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c-mode
      :tags 
        '( ("string.h" include (:system-flag t) nil [1 20])
            ("assert.h" include (:system-flag t) nil [21 40])
            ("stdio.h" include (:system-flag t) nil [41 59])
            ("ASSERT" variable (:constant-flag t) nil [69 75])
            ("test_name" function (:type "void") nil [117 550])
            ("SEX" type
               (:members 
                  ( ("MALE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [568 573])
                    ("FEMALE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol enumsubparts) [579 587]))                  
                :type "enum")
                nil [552 588])
            ("success" variable (:type "int") nil [590 602])
            ("fails" variable (:type "int") nil [603 613])
            ("total" variable (:type "int") nil [614 624])
            ("test_name" variable
               (:dereference 1
                :type "char")
                nil [626 645])
            ("Test" type
               (:typedef ("Test" type
                     (:prototype t
                      :type "struct")
                      nil nil)
                :type "typedef")
                nil [647 672])
            ("result" variable (:type ("Test" type (:type "class") nil nil)) nil [674 686])
            ("Test" type
               (:members 
                  ( ("test_name" variable
                       (:dereference 1
                        :type "char")
                        (reparse-symbol classsubparts) [704 723])
                    ("test_result" variable (:type "int") (reparse-symbol classsubparts) [726 743])
                    ("next" variable
                       (:pointer 1
                        :type ("Test" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [746 757]))                  
                :type "struct")
                nil [688 760])
            ("set_test_name" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [781 792]))                  
                :type "void")
                nil [762 851])
            ("add_test" function
               (:arguments 
                  ( ("name" variable
                       (:pointer 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [867 878]))                  
                :type "void")
                nil [853 883])
            ("test_peti" function (:type "void") nil [885 910])
            ("main" function (:type "int") nil [913 942]))          
      :file "testlib.c"
      :pointmax 943
      :fsize 942
      :lastmodtime '(23871 11498 350980 155000)
      :unmatched-syntax nil
      :lexical-table 
        '(("ASSERT" (spp-arg-list ("test_name" "expr") 75 . 92) . 
              ((VOID "void" 117 . 121) (symbol "test_name" 122 . 131) (semantic-list "()" 131 . 133) (semantic-list "{                                 \\
    printf(\"Test started - \" #test_name \"\\n\");      \\
    if(!(expr)){                                    \\
      printf(\"Test PASS\\n\");                        \\
    } else {                                        \\
      printf(\"Test FAILS\\n\");                       \\
    }                                               \\
    printf(\"Test done!.\\n\");                        \\
  }" 133 . 550)))
          )
)
    (semanticdb-table "semanticdb-table"
      :major-mode makefile-gmake-mode
      :tags 
        '( ("SHELL" variable (:default-value ("/bin/bash")) nil [1 20])
            (".PHONY" function (:arguments ("all")) nil [21 33])
            ("all" function (:arguments ("testlib")) nil [33 47]))          
      :file "Makefile"
      :pointmax 58
      :fsize 57
      :lastmodtime '(23870 30952 762561 81000)
      :unmatched-syntax '((punctuation 56 . 57) (symbol 48 . 55) (bol 48 . 48))))
  :file "!home!peti!Documents!game_battle!testlib!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
